from random import randint


class Pizza:
    def __init__(self, name: str, size: str):
        self.name = name  # –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã
        self.size = size  # –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã
        self.recipe = {}  # –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã –∏ –≤–µ—Å –≤ –≥—Ä–∞–º–º–∞—Ö

    def dict(self) -> dict:
        return self.recipe

    def __eq__(self, __other: object) -> bool:
        if self.name != __other.name:
            return False
        if self.size != __other.size:
            return False
        return True


class Margherita(Pizza):
    @staticmethod
    def var_sizes():
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ —Ä–∞–∑–º–µ—Ä—ã —ç—Ç–æ–π –ø–∏—Ü—Ü—ã"""
        return {'L', 'XL'}

    @staticmethod
    def icon():
        return 'üçÖ'

    def __init__(self, size: str):
        if size not in Margherita.var_sizes():
            raise SyntaxError('–î–∞–Ω–Ω–∞—è –ø–∏—Ü—Ü–∞ –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä')
        super().__init__("Margherita", size)

        match self.size:
            case 'L':
                self.recipe = {
                    'tomato sauce': 50,
                    'mozzarella': 150,
                    'tomatoes': 250,
                }
            case 'XL':
                self.recipe = {
                    'tomato sauce': 70,
                    'mozzarella': 200,
                    'tomatoes': 350,
                }
            # –µ—Å–ª–∏ –¥–æ–±–∞–≤—è—Ç—Å—è –¥—Ä—É–≥–∏–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è —ç—Ç–æ–π –ø–∏—Ü—Ü—ã - –¥–æ–±–∞–≤–∏—Ç—å 'case'


class Pepperoni(Pizza):
    @staticmethod
    def var_sizes():
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ —Ä–∞–∑–º–µ—Ä—ã —ç—Ç–æ–π –ø–∏—Ü—Ü—ã"""
        return {'L', 'XL'}

    @staticmethod
    def icon():
        return 'üçï'

    def __init__(self, size: str):
        if size not in Pepperoni.var_sizes():
            raise SyntaxError('–î–∞–Ω–Ω–∞—è –ø–∏—Ü—Ü–∞ –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä')
        super().__init__("Pepperoni", size)

        match self.size:
            case 'L':
                self.recipe = {
                    'tomato sauce': 65,
                    'mozzarella': 120,
                    'pepperoni': 260,
                }
            case 'XL':
                self.recipe = {
                    'tomato sauce': 85,
                    'mozzarella': 180,
                    'pepperoni': 350,
                }
            # –µ—Å–ª–∏ –¥–æ–±–∞–≤—è—Ç—Å—è –¥—Ä—É–≥–∏–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è —ç—Ç–æ–π –ø–∏—Ü—Ü—ã - –¥–æ–±–∞–≤–∏—Ç—å 'case'


class Hawaiian(Pizza):
    @staticmethod
    def var_sizes():
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ —Ä–∞–∑–º–µ—Ä—ã —ç—Ç–æ–π –ø–∏—Ü—Ü—ã"""
        return {'L', 'XL'}

    @staticmethod
    def icon():
        return 'üçç'

    def __init__(self, size: str):
        if size not in Hawaiian.var_sizes():
            raise SyntaxError('–î–∞–Ω–Ω–∞—è –ø–∏—Ü—Ü–∞ –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä')
        super().__init__("Hawaiian", size)

        match self.size:
            case 'L':
                self.recipe = {
                    'tomato sauce': 40,
                    'mozzarella': 110,
                    'chicken': 250,
                    'pineapples': 80
                }
            case 'XL':
                self.recipe = {
                    'tomato sauce': 65,
                    'mozzarella': 160,
                    'chicken': 340,
                    'pineapples': 115
                }
            # –µ—Å–ª–∏ –¥–æ–±–∞–≤—è—Ç—Å—è –¥—Ä—É–≥–∏–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è —ç—Ç–æ–π –ø–∏—Ü—Ü—ã - –¥–æ–±–∞–≤–∏—Ç—å 'case'


def log(function_to_decorate):
    def time_bake(pizza: Pizza):
        print(function_to_decorate.__name__, end=' ')
        function_to_decorate(pizza)
    return time_bake


@log
def bake(pizza: Pizza):
    print(f'- {randint(7, 14)} –º–∏–Ω!')


if __name__ == '__main__':
    bake(Margherita('L'))
